<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/11/hello-world/"/>
    <url>/2023/08/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>qt+挂载od+自动上传od</title>
    <link href="/2023/08/11/qt-%E6%8C%82%E8%BD%BDod-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0od/"/>
    <url>/2023/08/11/qt-%E6%8C%82%E8%BD%BDod-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0od/</url>
    
    <content type="html"><![CDATA[<h1 id="qt-挂载od-自动上传od"><a href="#qt-挂载od-自动上传od" class="headerlink" title="[qt+挂载od+自动上传od]"></a>[qt+挂载od+自动上传od]</h1><p><a href="https://sunpma.com/864.html">https://sunpma.com/864.html</a></p><h2 id="安装qb"><a href="#安装qb" class="headerlink" title="[安装qb]"></a>[安装qb]</h2><p>作者发布的编译好的二制文件地址：<br><a href="https://github.com/userdocs/qbittorrent-nox-static/releases">https://github.com/userdocs/qbittorrent-nox-static/releases</a><br>选择一下适合自己电脑的版本。用ssh登录到debian，执行以下命令</p><p>下载安装。我的电脑是x86的，所以选择x86_64-qbittorrent-nox：</p><h3 id="amd-4-4-2"><a href="#amd-4-4-2" class="headerlink" title="amd 4.4.2"></a>amd 4.4.2</h3><pre><code class="hljs">wget -qO /root/x86_64-qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.4.2_v1.2.15/x86_64-qbittorrent-nox</code></pre><p>amd 4.3.9</p><pre><code class="hljs">wget -qO /root/x86_64-qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.3.9_v1.2.15/x86_64-qbittorrent-nox</code></pre><p>arm 4.5.4</p><pre><code class="hljs">wget -qO /root/x86_64-qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.5.4_v2.0.9/aarch64-qbittorrent-nox</code></pre><h3 id="arm-4-4-2"><a href="#arm-4-4-2" class="headerlink" title="arm 4.4.2"></a>arm 4.4.2</h3><pre><code class="hljs">wget -qO /root/x86_64-qbittorrent-nox https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-4.4.2_v2.0.6/aarch64-qbittorrent-nox</code></pre><p> 给权限</p><pre><code class="hljs">chmod 700 /root/x86_64-qbittorrent-nox</code></pre><p>然后添加如下内容：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros">cat &gt; /etc/systemd/system/qbt.service &lt;&lt;EOF<br>[Unit]<br><span class="hljs-attribute">Description</span>=qBittorrent<span class="hljs-built_in"> Service</span><br><span class="hljs-built_in"></span><span class="hljs-attribute">After</span>=network.target nss-lookup.target<br><br>[Service]<br><span class="hljs-attribute">UMask</span>=000<br><span class="hljs-attribute">ExecStart</span>=/root/x86_64-qbittorrent-nox <span class="hljs-attribute">--profile</span>=/root/qbt<br><br>[Install]<br><br><span class="hljs-attribute">WantedBy</span>=multi-user.target<br>EOF<br></code></pre></td></tr></table></figure><p>备用：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vim /etc/systemd/system/qbt.service<br><br>[Unit]<br><span class="hljs-attribute">Description</span>=qBittorrent Daemon<span class="hljs-built_in"> Service</span><br><span class="hljs-built_in"></span><span class="hljs-attribute">After</span>=network.target<br><br>[Service]<br><span class="hljs-attribute">LimitNOFILE</span>=512000<br><span class="hljs-attribute">User</span>=root<br><span class="hljs-attribute">ExecStart</span>=/root/x86_64-qbittorrent-nox <span class="hljs-attribute">--profile</span>=/root/qbt<br><br>[Install]<br><br><span class="hljs-attribute">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure><p>请注意：–profile&#x3D;&#x2F;usr&#x2F;local&#x2F;etc这个选项，表示qBittorrent的配置目录，如果不写，就是在当前用户的主目录，例如root目录下面。我建议按上面的选项填写，这样规范一些。</p><h3 id="启动关闭命令："><a href="#启动关闭命令：" class="headerlink" title="启动关闭命令："></a>启动关闭命令：</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl enable qbt   <span class="hljs-comment">#开机启动，第一次必须要执行此命令</span><br><span class="hljs-params">system</span>ctl start qbt  <span class="hljs-comment">#启动</span><br><span class="hljs-params">system</span>ctl stop qbt  <span class="hljs-comment">#停止</span><br><span class="hljs-params">system</span>ctl status qbt  <span class="hljs-comment">#软件运行状态查询</span><br><span class="hljs-params">system</span>ctl enable qbt &amp;&amp; <span class="hljs-params">system</span>ctl start qbt &amp;&amp; <span class="hljs-params">system</span>ctl status qbt<br></code></pre></td></tr></table></figure><pre><code class="hljs">rm -rf /usr/bin/qbittorrent-nox #卸载qtrm -rf /etc/systemd/system/qbt.service</code></pre><p>如有调整</p><pre><code class="hljs">systemctl daemon-reload systemctl enable qbtsystemctl start qbtsystemctl status qbt</code></pre><h2 id="docker安装qt"><a href="#docker安装qt" class="headerlink" title="docker安装qt"></a>docker安装qt</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d \<br><span class="hljs-attribute">--name</span>=qbittorrent \<br><span class="hljs-attribute">--net</span>=host \<br>-e <span class="hljs-attribute">TZ</span>=Asia/Shanghai \<br>-e <span class="hljs-attribute">WEBUI_PORT</span>=8081 \<br>-v /root/qb/config:<span class="hljs-built_in">/config </span>\<br>-v /root/qb/download/complete:/downloads \<br>--restart unless-stopped \<br>lscr.io/linuxserver/qbittorrent<br><br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>到目前为止，qBittorrent就算安装成功了，打开浏览器，输入：IP:8080，就可以打开qBittorrent的网页界面了。<br>用户名：admin<br>密码：adminadmin</p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>1，登录后，点齿轮修改语言<br>2，默认网页登录端口是8080，可以在设置里改为其它的<br>3，切记第一次登录后，修改用户名和密码</p><h2 id="注册e5教程"><a href="#注册e5教程" class="headerlink" title="[注册e5教程]"></a>[注册e5教程]</h2><p><a href="https://www.mspace.cc/archives/479">https://www.mspace.cc/archives/479</a><br><a href="https://blog.tanglu.me/use-rclone-to-upload-torrents-when-downloaded/">https://blog.tanglu.me/use-rclone-to-upload-torrents-when-downloaded/</a></p><h2 id="挂载od教程"><a href="#挂载od教程" class="headerlink" title="[挂载od教程]"></a>[挂载od教程]</h2><p><a href="https://www.misterma.com/archives/900/">https://www.misterma.com/archives/900/</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl https:<span class="hljs-regexp">//</span>rclone.org/install.sh | sudo bash<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">rclone config<br><br>./rclone authorize <span class="hljs-string">&quot;onedrive&quot;</span><br></code></pre></td></tr></table></figure><h1 id="reclone-对接od"><a href="#reclone-对接od" class="headerlink" title="[reclone 对接od]"></a>[reclone 对接od]</h1><h2 id="1安装-Rclone"><a href="#1安装-Rclone" class="headerlink" title="1安装 Rclone"></a>1安装 Rclone</h2><p>官方提供了<a href="https://p3terx.com/go/aHR0cHM6Ly9yY2xvbmUub3JnL2luc3RhbGwvI3NjcmlwdC1pbnN0YWxsYXRpb24">一键安装脚本</a>：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl https:<span class="hljs-regexp">//</span>rclone.org/install.sh | sudo bash<br><br></code></pre></td></tr></table></figure><h3 id="2配置-Rclone"><a href="#2配置-Rclone" class="headerlink" title="2配置 Rclone"></a>2配置 Rclone</h3><p>输入 <code>rclone config</code> 命令，会出现以下信息，参照下面的注释进行操作。点击查看</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">rclone config<br></code></pre></td></tr></table></figure><h2 id="3-OneDrive授权"><a href="#3-OneDrive授权" class="headerlink" title="3.OneDrive授权"></a>3.OneDrive授权</h2><p>这一步是在本地电脑Windows系统操作，进入<a href="https://rclone.org/downloads/">Rclone下载页面</a>，点击下载Windows版本的Rclone软件，选择Intel&#x2F;AMD-64Bit即可。如果是32位操作系统，那么选择32Bit的。</p><p>下载后将全部文件解压到D:\rclone文件夹，打开CMD命令窗口，依次输入下面两条命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /d d:\rclone<br>rclone authorize <span class="hljs-string">&quot;onedrive&quot;</span><br></code></pre></td></tr></table></figure><p>第二条命令输入完回车后会自动打开浏览器，登录你的OneDrive账号，点击“是”按钮同意授权。成功后返回到CMD命令窗口就能看到长串授权码，即花括号以及里面的内容。</p><p>将授权码复制下来保存备用，有效期1个小时。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Paste the <span class="hljs-keyword">following</span> <span class="hljs-keyword">into</span> your remote machine <span class="hljs-comment">---&gt;</span><br>&#123;&quot;access_token&quot;:&quot;EwCAA8l6BAAUwihrrCrmQ4wuIJX5mbj7rQla6TUAAS7oJFl1pmRc4whIlOj5am6oPQ+zf1kOcygsi5JHL2IgXh55prjh3r6P/fSZr8K9UJ58Pksh1YTJkzL/kHywyZnEvM8kDr55B1J//SXLJ1sGNsNR9vH0Rmz9xMrnl6GFrF8z+UQxi+GL3L3MpBN3NenacA0+pmVXKk8hghj64a8xxEFhlc+b0LJCp4yMg+96548752OPQwLZEPikbJ1zB5Wm5IUzuq03zNKa5lOicGET0l8zWW+itYg2Ca+mCS9DRm5e8NcPL5yiLZmRIm4vCI3pIQGKxEKghQG2lLmjMnWJj8BMotxH9Px2/XWs2TJ3BdLbuX2EjdYy8MNoBbaYXafe3uHx!UpdOwFHCiKnJqYomn*8cCFNP7RM1W8DMzXNBAlgTnuaRo6v7xjxFX3xIrXWonyCk*l1Z7glOXEmRS&quot;,&quot;expiry&quot;:&quot;2021-09-16T15:47:47.8171297+08:00&quot;&#125;<br>&lt;<span class="hljs-comment">---End paste</span><br></code></pre></td></tr></table></figure><h2 id="4-挂载到-vps"><a href="#4-挂载到-vps" class="headerlink" title="4. 挂载到 vps"></a>4. 挂载到 vps</h2><p>首先新建一个文件夹用于挂载：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/root/</span>ss2<br></code></pre></td></tr></table></figure><p>开始挂载：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">rclone mount ss2: <span class="hljs-string">/root/ss2</span> <span class="hljs-params">--allow-other</span> <span class="hljs-params">--allow-non-empty</span> <span class="hljs-params">--vfs-cache-mode</span> writes <span class="hljs-params">--daemon</span><br></code></pre></td></tr></table></figure><p>其中 odrive 是 rclone 配置时输入的配置名称，&#x2F;onedrive 是挂载目录，–daemon 是指后台运行。</p><p>此时可能会报错：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Fatal</span> <span class="hljs-literal">error</span>: mount not ready<br></code></pre></td></tr></table></figure><p>此时可能会报错：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">Fatal <span class="hljs-keyword">error</span>: failed to mount FUSE fs: fusermount: <span class="hljs-keyword">exec</span>: <span class="hljs-string">&quot;fusermount&quot;</span>: executable <span class="hljs-keyword">file</span> not found <span class="hljs-keyword">in</span> $PATH<br></code></pre></td></tr></table></figure><p>这是因为缺少依赖，我们选择安装</p><p>centos 系使用：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y fuse3<br></code></pre></td></tr></table></figure><p>debian 系使用：</p><pre><code class="hljs">apt-get updateapt-get install -y fuse3apt-get install -y fuseapt-get install fuse -y</code></pre><p>AMD</p><pre><code class="hljs">apt install -y fuse3</code></pre><p>再次执行挂载命令，如果没有报错，就是挂载成功了。</p><p>检查挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><h2 id="开启自启rclone"><a href="#开启自启rclone" class="headerlink" title="开启自启rclone"></a>开启自启rclone</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs routeros">cat &gt; /etc/systemd/system/ss5t.service &lt;&lt;EOF<br>[Unit]<br><span class="hljs-attribute">Description</span>=Rclone<br><span class="hljs-attribute">AssertPathIsDirectory</span>=LocalFolder<br><span class="hljs-attribute">After</span>=network-online.target<br><br>[Service]<br><span class="hljs-attribute">Type</span>=simple<br><span class="hljs-attribute">ExecStart</span>=/usr/bin/rclone mount ss5t: /home/ss5t  --umask 0000  --default-permissions  --allow-non-empty  --allow-other  --buffer-size 32M  --vfs-read-chunk-size 64M  --vfs-read-chunk-size-limit 1G<br><span class="hljs-attribute">ExecStop</span>=fusermount -u LocalFolder<br><span class="hljs-attribute">Restart</span>=on-abort<br><span class="hljs-attribute">User</span>=root<br><br>[Install]<br><span class="hljs-attribute">WantedBy</span>=default.target<br>EOF<br><br></code></pre></td></tr></table></figure><p>说下命令：<a href="https://wlnxing.com/archives/4.html">https://wlnxing.com/archives/4.html</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">挂载（启动服务）：systemctl <span class="hljs-keyword">start</span> <span class="hljs-type">name</span>.service<br>停止挂载（停止挂载）：systemctl stop <span class="hljs-type">name</span>.service<br>重启服务：systemctl <span class="hljs-keyword">restart</span> <span class="hljs-type">name</span>.service<br>开机挂载（开机启动）：systemctl <span class="hljs-keyword">enable</span> <span class="hljs-type">name</span>.service<br>取消开机启动：systemctl <span class="hljs-keyword">disable</span> <span class="hljs-type">name</span>.service<br></code></pre></td></tr></table></figure><p>3.设置开机启动</p><pre><code class="hljs">systemctl enable ss5t</code></pre><p>启动挂载</p><pre><code class="hljs">systemctl start ss5t</code></pre><p>至此，每次开机都会自动挂载网盘了。</p><p>其他命令如下：<br>停止挂载</p><pre><code class="hljs">systemctl stop rclone</code></pre><p>重新挂载</p><pre><code class="hljs">systemctl restart rclone</code></pre><h1 id="qbittorrent下载完成后自动上传-并自动删种"><a href="#qbittorrent下载完成后自动上传-并自动删种" class="headerlink" title="qbittorrent下载完成后自动上传 并自动删种"></a>qbittorrent下载完成后自动上传 并自动删种</h1><p>使用方法：<br>qB WEB UI 勾选“Torrent 完成时运行外部程序”<br>填上：</p><pre><code class="hljs">bash /root/qb_auto.sh  &quot;%N&quot; &quot;%F&quot; &quot;%R&quot; &quot;%D&quot; &quot;%C&quot; &quot;%Z&quot; &quot;%I&quot;</code></pre><p><img src="/media/16877472249448/16877488093493.jpg"></p><pre><code class="hljs">chmod +x qb_auto.sh</code></pre><p>请自行安装jq</p><p>确保两个脚本的auto_del_flag变量一致，否则没办法删除分享率达标的种子<br>只吸血的同学只需要将qu_auto.sh的leeching_mode设为true即可<br>需要控制分享率的需要两个脚本<br>并添加监控任务</p><p>crontab -e</p><pre><code class="hljs">*/1 * * * * bash /root/ratio_mon.sh</code></pre><h1 id="rclone手动上传"><a href="#rclone手动上传" class="headerlink" title="rclone手动上传"></a>rclone手动上传</h1><pre><code class="hljs">screen rclone move /root/qb/download/complete/Bangumi dmzf:/动漫 --transfers 5 -P --onedrive-chunk-size 100M</code></pre><p>1</p><pre><code class="hljs">screen rclone move /root/qbt/qBittorrent/downloads/筱田优 ribenyouma:/筱田优 --transfers 2 -P --onedrive-chunk-size 100M</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/08/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/08/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
